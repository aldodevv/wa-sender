

   const numbers = ['083870126241','081213369497','085156597246','0895380057458','081281084924','08817266323','5947659233','085891091997','081456081822','081211994540','089637575727','083817383314','8889516611','085157550375','089637859557','082211367258','089501103748','081297472004','0895331727658','085798714220','085880345696','0895346159258','0895320905607','087877285961','085892644370','089670340710','088213304710','089678865427','085864607074','085892219790','089517799841','085714155944','085216960678','085770474071','087716151023','089630197204','085715862860','085161524088','085759998634','081399261544','088293022887','8993509112','085719714075','+6281513933708','081339301487','088210114163','081212930827','089630401224','081233363052','081219699557','081290784807','081213369119','089669509655','089523210804','085225518729','081905466899','085821266613','08569564955','088219707062','089694490182','089675757122','083824353868','087879525819','081317037781','081280274965','085782265046','082124677696','081239917676','082217203786','085893476228','085697197782','0895391751804','08999302593','089662717400','0895330392394','081291650531','089646549755','085155155948','082370777654','081236895551','083896297994','081511942887','089524736702','081310671422','085796759078','5248303608','081287290263','0895414728139','082310573700','089525437326','085717605552','088297739502','085283397068','085314945559','089616827400','082123586726','085591452070','088212011429','0895379788123','0895332373962','085723641840','085859029917','089505234000','083893964322','081383661920','082289337307','089526219044','085781160479','0895701615142','085814015613','081338445301','085697767180','087771678934','08888613074','0218009471','081818813544','081996609868','085865369826','081219938953','085773332597','085946708950','081289756067','081291468721','085695347622','087820553216','083132886118','085159743005','085772524236','085694112924','088213064656','0895332196341','088809995994','0895704075589','082353028349','0895383252913','085601054568','081523815966','081297831578','082255241008','081291489312','0895412945216','085714467390','0895602578229','089514461882','085246178631','087888837014','085894653608','087872757990','085822753747','081316367899','0895365304221','081350919458','085811005429','081944333704','0895320542801','081286203345','088290567643','081345193449','087773733304','082337712130','085710271239','089501026457','085947324273','083873699936','085951348327','0859106813320','081294411271','089513591681','087772543410','081283193378','087779226377','085711682457','081295889227','081915151444','082112026087','085157389958','083159994144','087830951257','087826832724','081281173504','081292803198','085776253491','081352210877','083874003229','087888460537','085693458722','082320285842','085174161905','082197775512','082123299496','0895413755930','087741415925','081395982939','085161417500','085890087768','089648492198','088216372746','089664477552','082298953040','089653836343','085158577996','085172014604','089680480600','089630742076','081218655864','08878848908','081388017827','082123405721','089602492934','081285114186','081389158700','085748526904','08976218010','088289123059','082288221495','0895391556999','082159700767','085334991336','087892008908','085161162409','081385084867','08158784885','082174443344','081906521084','089509006070','085157445909','085161406944','083899601027','088225825512','081219564156','0895606168771','082256168574','0895323655577','082258779965','085694463474','087806781225','087888222357','081311468677','0881024970597','0895383356776','089502803480','087787186517','082152155049','0895615778552','085715730673','089654505884','088291876843','085711186725','082286066877','081258618494','081311081788','081219012384','085283889682','081347826511','081241184300','082311645497','089670252254','0895321080033','085894656178','082237941654','8885673339','085892076528','085710368066','082211481135','085160116699','081210649506','082299718064','082288661773','081328361270','085711168827','083804221142','089694270997','085929961793','085732171531','085787007609','085779778504','085780126338','089516887089','089605694455','085849353608','0881024027021','088213849571','087874759746','083135472995','089699284430','081297869357','085718357329','082279483301','0895334999599','082289249057','081296200479','081818241116','081397073074','085753957873','0895393039822','085158116032','085711051844','085960313077','087787929683','082124389541','089504688803','081398917086','087793246984','089516788169','081258541038','085880431359','081294758524','0895327414574','088298117769','089665557893','089637368720','089514483581','085694513877','089529770020','085946650292','081294889782','088299213858','0895398178050','089653787316','085892728792','81212986036','085609143321','0895704412581','081277373824','085770757274','081386548871','08588857429','085771911187','08815373571','082116629906','081808900981','08561674220','081218674792','085891465057','081290311866','081223791824','089602675939','0895631595544','08118649333','085752704917','089526272752','085861354362','08119692385','089526497806','088708873023','085849947863','085226237613','081368762766','085776765720','081324652707','081806268198','081290434017','081348686348','1280703986','08998685963','083899084253','081281442529','085156989046','085156101870','082125785129','089654942801','082351335166','088213415316','08551746838','082266949599','081213572183','087771237195','083112353485','087897630371','081290246300','089513732930','082249577960','085697098553','081215313723','089507377718','089694769701','089694471589','082147238119','087829038050','81383352218','085156376617','0882022144396','087870856013','085822417068','085163102212','089525574496','081254610399','081521558514','085348110170','082159033439','085771600194','0895600787013','085693188349','085787173903','081350495253','082359133348','0895612317217','08159127845','081510051169','085875583007','085697126388','085781100781','087788162721','085753961855','085877559947','089503309223','0895331398730','082374079647','082350991027','088975932053','085157413055','081255342439','088296547791','083874487834','085891633199','087788166027','081528828771','081287631632','081210812631','081385312060','081212744501','081517980607','6282253933810','089504345184','087885744809','085891730034','085695608171','087887398625','085716461214','089653018627','082310463208','081245000241','081283238547','085657289927','082124620848','082374079647','082122085604','0856535774','087756482540','082159762688','081649425221','087860172267','088975347069','081384581458','081219978860','081905074939','082173982350','085668784917','081298229050','085787103177','081382140068','082122861575','087874153770','08158731813','081807814067','0895606084724','0895706530901','0895707910603','081210773997','081382431905','085752734384','087810973031','085771696022','083807412019','085828245226','082125471085','087774114849','085246626042','081381725653','082199940160','085778305605','085717595581','089506721545','081257029162','081284181175','08972777549','083892727264','081349105199','087834667181','0895322848991','0895704121560','089643429760','089677227109','088233409829','085654005579','087721910694','085161430566','085718855437','085894162533','085776303791','085828636615','085775648202','081993249054','0852320358682'];
    const numbers2 = ["081385198382","081311424404","089637558875","082124203440","087782935426","081517781765","081383534846","081282653816","085718866967","085788715426","089609916749","081280715826","089501108990","081237754899","0895333082315","85719086691","085711243202","085158158372","6285281605304","085157393913","081316216617","081809697186","087784234987","081381975527","085721001569","0895611726482","081387136244","085812843760","089669934716","085156850530","082360376591","081219565393","085691648084","085779702737","083841159083","081994113727","082180628819","085925003618","088210856787","089618765587","083808355340","0895321189865","085163127739","081268589863","082163579524","081341612939","081280718028","085717758849","088291493860","081248456394","089516315589","089506645921","085156052338","08978366955","0895411755411","085716660621","08982991670","087719283136","085811527736","085526298287","081286934350","085782141935","087782391952","0895348016821","081220893249","087825802983","083815682216","089655808696","081542886482","0895421256820","083876088555","085880170995","089519537853","083872556348","089654924966","08811398177","085219677533","0895350579741","081293245959","0895328639908","081282679246","6287776738704","088225189608","08980742225","083177844304","089636907362","085280221275","085732164173","081240586476","085240517103","085779430446","089517754744","085882186781","088977718652","085640801019","0895391056327","081511050645","081295576871","081360272642","081219431755","6281385119871","085718719368","085875650979","088219715735","082145328659","08811744572","087732172303","083872184470","089512600267","089646545578","081517648751","087875320012","082284787140","085769854818","08986851760","082113118291","08980433656","081586892582","087883668623","081317833397","089670237832","089637069437","081284671956","088219937704","088298566747","0895321839471","087820489852","08568727920","085161205116","085216210900","085624493086","087706187815","087871976694","089503185303","085846428583","085717183683","085719098611","085722679509","081310959045","088296482650","08978354754","08990094901","088225868476","085379260870","081380603870","081413018962","081384707725","082268733185","085717393909","087719286459","85889763554","0882000307310","082127579738","081292707787","085718391676","082130837847","082122951859","08561432530","089636922639","089518988030","0895636350405","085880353584","0895619112689","081398072410","081585913795","081326740142","82273091065","082113676547","089636809713","089675861051","085776908322","085693374780","0895360908283","081318391210","089649897700","082218419119","085591499173","087779284598","081213632261","082175498691","088291262778","081293329115","081284576674","081211603604","082138388825","089653714426","085767326770","081220543436","085718912557","085328788611","081574680523","089523406754","085694930006","089607946745","082117778068","085832540344","087818781272","081256250906","085524509313","081219093067","089621052605","085811886269","089634509682","085893468770","089639920715","085777419626","085156487577","6285771624634","085951750898","082112989895","085158514660","082123384291","081362086659","081388499755","088299261981","085261100516","08976839962","085810868745","081779433024","08557884491","089515854198","081298250125","08998436894","08568327025","085893865726","082125607775","085718039294","83806343821","0895383127304","085889632190","08129963041","088293354651","085811485874","081281214817","081383089545","081317612861","089531427635","085697962836","085695305750","083818057026","0895337568723","085156271262","085771964134","081617628204","085954713823","087888517922","085640823316","085718445096","081573039526","081291401889","0895373942137","081291587855","0895331160886","0895383326653","085717136325","08558038762","083891470759","087788755510","085774471157","087775252012","08991333323","081386312875","08381042419","081319136446","082144508784","081292561878","088290506669","08888058234","089524675356","085266986607","089502965197","08567772721","089513948466","081291568646","088905379070","089655101809","089529184194","081542332479","08984930904","085163580041","082122183990","6281282531743","081908125713","081219528531","081290962627","081296631442","089516847625","085591688301","081225312541","081386386510","0895333823537","089512522985","81385551461","0895372516333","088221913596","081283695427","081292517020","085771673641","0895412002767","081339615197","085862138786","089601857089","085769021014","085691727132","089630953064","089501189410","081318052999","088299374314","085720019611","089527670270","085726712899","081213234916","081247412332","0895383311815","081908497429","081319744769","08971889459","081296355051","08979038486","081315570543","081297234215","085868026624","081361842641","085399591426","083895017267","081315209638","082121382600","0895336562023","081380034861","081294557661","083899065724","085944017703","082113801890","089636951468","081283744088","082196637606","081517810773","085648682484","081398318056","085695218788","087881617121","085849951427","082157052192","089693644321","083151507260","081250378681","089508534422","081352626052","087895394852","081257841849","081258811462","081256694412","081256297635","082159781404","085387900652","082199616905","089689583767","081649443506","082158327432","081350659745","082125528458","082255173701","0895617466142","082255428360","082110238556","083125391240","082350262931","085715227340","085731684570","08571967960","082258603100","087777784422","081617240418","081317353848","087780984990","0895384163451","0895600784769","0895346711574","081296146817","081282201655","089516789321","082352188368","081998246409","088293725319","085845160437","085348360716","081351882036","087887949083","089673189452","0895609624172","081258163095","085811777392","081908374824","082151019149","081296204461","089517373419","087721888891","085718299565","083874655543","085849005282","085155056716","081298783523","081221933187","081291127361","085710246758","085921087055","085719075189","081316591834","082158405088","081299085215","089512979272","081284795260","08812554493","085933058582","087869051561","081297499891","0881024288846","081282535552","081290882386","081254692025","085759215980","085810205737","085155084755","085695916788","0895391365594","088224901988","081350758231","082122072980","085787921020","081380031378","085238747231","085821756972","082150245843","081263064617","087740537509","085388972430","085711225598","0895378112173","085156249052","083813669788","085752101088","085388907270","089518344514","082286108773","083110442902","0895412758201","085882522383","083125573581","085886328774","082253614080","082151703345","085814907651","081257500995","085809448620","081384802814","085695585487","081396854837","087881172173","081347450469","082158558081","089638951511","081932338530","0895414724935","081291769042","0895377266183","085900336804","6283805892976","08895921327","082146850573","0895377102769","081346699080","0895365575176","085714791064","081383562472","085893629029","082114627997","083815129681","087728527603","085885025632","081347733440","081213856012","085745164005","085299402058","085705041136","087780765842","085881323618","81298360229","082127945246","085782389312","6285714075464","087896542511","089514572169","081385458712","082253635616","085815412810","081906799233","081294741923","081389201764","082298949954","085654550912","081219885968","085349480913","082152185541","085727982765","081584175463","081348374621","082189127524","088211767468","08561722502","081293526138","081347918750","81278835941","085883851519","081293861571","088214769735","085695753274","081383488148","081387295662","085624708701","085894248683","085894021856","081348819826"]
 
   const { default: makeWASocket, DisconnectReason, useMultiFileAuthState } = require('@whiskeysockets/baileys');
const { Boom } = require('@hapi/boom');
const QRCode = require('qrcode-terminal');
const pino = require('pino');

class WABulkSender {
    constructor() {
        this.sock = null;
        this.isReady = false;
        this.logger = pino({ level: 'silent' });
        this.qrRetries = 0;
        this.maxQRRetries = 3;
    }

    async initialize() {
        try {
            const { state, saveCreds } = await useMultiFileAuthState('auth_info');
            
            this.sock = makeWASocket({
                auth: state,
                logger: this.logger,
                printQRInTerminal: false,
                browser: ['Ubuntu', 'Chrome', '20.0.04'],
                connectTimeoutMs: 60000,
                defaultQueryTimeoutMs: 0,
                keepAliveIntervalMs: 10000,
                emitOwnEvents: true,
                fireInitQueries: true,
                generateHighQualityLinkPreview: true,
                syncFullHistory: false,
                markOnlineOnConnect: true,
            });

            this.sock.ev.on('connection.update', (update) => {
                const { connection, lastDisconnect, qr } = update;
                
                if (qr) {
                    console.log('📱 Scan QR Code:');
                    QRCode.generate(qr, { small: true });
                    this.qrRetries++;
                    
                    if (this.qrRetries > this.maxQRRetries) {
                        console.log('❌ Too many QR retries. Restarting...');
                        this.restart();
                        return;
                    }
                }
                
                if (connection === 'close') {
                    const shouldReconnect = (lastDisconnect?.error instanceof Boom) 
                        ? lastDisconnect.error.output.statusCode !== DisconnectReason.loggedOut
                        : true;
                    
                    console.log('❌ Connection closed due to:', lastDisconnect?.error);
                    
                    if (shouldReconnect) {
                        console.log('🔄 Reconnecting...');
                        this.initialize();
                    }
                    
                    this.isReady = false;
                } else if (connection === 'open') {
                    console.log('✅ WhatsApp Connected Successfully!');
                    this.isReady = true;
                    this.qrRetries = 0;
                }
            });

            this.sock.ev.on('creds.update', saveCreds);
            
        } catch (error) {
            console.error('❌ Initialization error:', error);
            setTimeout(() => this.initialize(), 5000);
        }
    }

    async restart() {
        if (this.sock) {
            this.sock.end();
        }
        this.qrRetries = 0;
        await this.delay(2000);
        this.initialize();
    }

    async waitForReady() {
        let attempts = 0;
        const maxAttempts = 60;
        
        while (!this.isReady && attempts < maxAttempts) {
            await this.delay(1000);
            attempts++;
        }
        
        if (!this.isReady) {
            throw new Error('Failed to connect after 60 seconds');
        }
    }

    delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    formatNumber(number) {
        let cleaned = number.replace(/\D/g, '');
        
        if (cleaned.startsWith('8')) {
            cleaned = '62' + cleaned;
        } else if (cleaned.startsWith('08')) {
            cleaned = '62' + cleaned.substring(1);
        }
        
        return cleaned + '@s.whatsapp.net';
    }

    async sendMessage(number, message) {
        try {
            const formattedNumber = this.formatNumber(number);
            
            // Check if number exists on WhatsApp
            const [exists] = await this.sock.onWhatsApp(formattedNumber);
            if (!exists?.exists) {
                console.log(`❌ ${number} - Not registered on WhatsApp`);
                return false;
            }

            await this.sock.sendMessage(formattedNumber, { text: message });
            console.log(`✅ ${number} - Message sent successfully`);
            return true;
            
        } catch (error) {
            console.error(`❌ ${number} - Error:`, error.message);
            return false;
        }
    }

    async bulkSend(numbers, message, delaySeconds = 40) {
        await this.waitForReady();
        
        console.log(`\n🚀 Starting bulk send to ${numbers.length} numbers...`);
        console.log(`⏰ Delay: ${delaySeconds}s between messages\n`);
        
        const results = {
            total: numbers.length,
            success: 0,
            failed: 0,
            errors: []
        };

        for (let i = 0; i < numbers.length; i++) {
            const number = numbers[i];
            console.log(`📱 [${i + 1}/${numbers.length}] Sending to ${number}...`);
            
            const success = await this.sendMessage(number, message);
            
            if (success) {
                results.success++;
            } else {
                results.failed++;
                results.errors.push(number);
            }
            
            // Delay except for last message
            if (i < numbers.length - 1) {
                console.log(`⏳ Waiting ${delaySeconds}s before next message...\n`);
                await this.delay(delaySeconds * 1000);
            }
        }

        console.log('\n📊 BULK SEND COMPLETED');
        console.log(`✅ Success: ${results.success}`);
        console.log(`❌ Failed: ${results.failed}`);
        if (results.errors.length > 0) {
            console.log(`Failed numbers: ${results.errors.join(', ')}`);
        }
        
        return results;
    }

    async destroy() {
        if (this.sock) {
            this.sock.end();
        }
    }
}

// Usage Example
async function main() {
    const sender = new WABulkSender();
    
    const message = 'bang/ka mau joki skripsi, laporan, project web/app';
    
    try {
        console.log('🔄 Initializing WhatsApp connection...');
        await sender.initialize();
        
        // Send with 40s delay (change to 60 for 1 minute)
        const results = await sender.bulkSend(numbers, message, 40);
        
        console.log('\n💡 Process completed. Press Ctrl+C to exit');
        
    } catch (error) {
        console.error('❌ Error:', error.message);
    }
}

// Run the script
main().catch(console.error);

// Graceful shutdown
process.on('SIGINT', async () => {
    console.log('\n🛑 Shutting down...');
    process.exit(0);
});

module.exports = WABulkSender;